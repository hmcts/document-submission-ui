#!groovy

@Library("Infrastructure")

def type = "nodejs"
def product = "ds"
def component = "ui"

static LinkedHashMap<String, Object> secret(String secretName, String envVar) {
  [ $class: 'AzureKeyVaultSecret',
    secretType: 'Secret',
    name: secretName,
    version: '',
    envVariable: envVar
  ]
}

def secrets = [
  'ds-${env}': [
    secret('idam-secret', 'IDAM_SECRET'),
    secret('citizen-user', 'CITIZEN_USERNAME'),
    secret('citizen-password', 'CITIZEN_PASSWORD')
  ],
  's2s-${env}': [
    secret('microservicekey-ds-ui', 'SERVICE_AUTH_SECRET')
  ]
]

def yarnBuilder = new uk.gov.hmcts.contino.YarnBuilder(this)
def branchesToSync = ['demo']

def pipelineConf = new AppPipelineConfig()
pipelineConf.vaultSecrets = secrets


withPipeline(type, product, component) {
  disableLegacyDeployment()
  enableAksStagingDeployment()

   after('build') {
    yarnBuilder.yarn('build')
  }

  after('smoketest:preview') {
    steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'smoke-output/**/*'
  }

  after('smoketest:aat') {
    steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'smoke-output/**/*'
  }

  after('functionalTest:preview') {
    steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'functional-output/**/*'
  }

  after('functionalTest:aat') {
    steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'functional-output/**/*'
  }
}
